{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steve\\\\Desktop\\\\Prueba Hilos\\\\react-coding-challenges\\\\chatter\\\\src\\\\components\\\\Messages\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport useSound from \"use-sound\";\nimport config from \"../../../config\";\nimport LatestMessagesContext from \"../../../contexts/LatestMessages/LatestMessages\";\nimport TypingMessage from \"./TypingMessage\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Message from \"./Message\";\nimport \"../styles/_messages.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(config.BOT_SERVER_ENDPOINT, {\n  transports: [\"websocket\", \"polling\", \"flashsocket\"]\n});\nconst ME = \"me\";\n\nfunction Messages() {\n  _s();\n\n  const [playSend] = useSound(config.SEND_AUDIO_URL);\n  const [playReceive] = useSound(config.RECEIVE_AUDIO_URL);\n  const {\n    setLatestMessage\n  } = useContext(LatestMessagesContext);\n  const [message, setMessage] = useState({\n    id: Date.now(),\n    user: ME,\n    message: \"\"\n  });\n  const [botTyping, setBotTyping] = useState(false);\n\n  const sendMessage = data => {\n    setLatestMessage(ME, data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages__list\",\n      id: \"message-list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      message: message,\n      sendMessage: () => sendMessage(message),\n      onChangeMessage: e => setMessage({ ...message,\n        message: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messages, \"P7wYY8suFqtUquqYHRpy30K4q5A=\", false, function () {\n  return [useSound, useSound];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/Steve/Desktop/Prueba Hilos/react-coding-challenges/chatter/src/components/Messages/components/Messages.js"],"names":["React","useContext","useState","io","useSound","config","LatestMessagesContext","TypingMessage","Header","Footer","Message","socket","BOT_SERVER_ENDPOINT","transports","ME","Messages","playSend","SEND_AUDIO_URL","playReceive","RECEIVE_AUDIO_URL","setLatestMessage","message","setMessage","id","Date","now","user","botTyping","setBotTyping","sendMessage","data","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,qBAAP,MAAkC,iDAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,0BAAP;;AAEA,MAAMC,MAAM,GAAGR,EAAE,CAACE,MAAM,CAACO,mBAAR,EAA6B;AAC5CC,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd,EAAyB,aAAzB;AADgC,CAA7B,CAAjB;AAIA,MAAMC,EAAE,GAAG,IAAX;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,QAAD,IAAaZ,QAAQ,CAACC,MAAM,CAACY,cAAR,CAA3B;AACA,QAAM,CAACC,WAAD,IAAgBd,QAAQ,CAACC,MAAM,CAACc,iBAAR,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAuBnB,UAAU,CAACK,qBAAD,CAAvC;AAEA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC;AACrCqB,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADiC;AAErCC,IAAAA,IAAI,EAAEZ,EAF+B;AAGrCO,IAAAA,OAAO,EAAE;AAH4B,GAAD,CAAtC;AAMA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAM2B,WAAW,GAAIC,IAAD,IAAU;AAC5BV,IAAAA,gBAAgB,CAACN,EAAD,EAAKgB,IAAL,CAAhB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,EAAE,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAET;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEA,OADX;AAEE,MAAA,WAAW,EAAE,MAAMQ,WAAW,CAACR,OAAD,CAFhC;AAGE,MAAA,eAAe,EAAGU,CAAD,IACfT,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcA,QAAAA,OAAO,EAAEU,CAAC,CAACC,MAAF,CAASC;AAAhC,OAAD;AAJd;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA/BQlB,Q;UACYX,Q,EACGA,Q;;;KAFfW,Q;AAiCT,eAAeA,QAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport useSound from \"use-sound\";\r\nimport config from \"../../../config\";\r\nimport LatestMessagesContext from \"../../../contexts/LatestMessages/LatestMessages\";\r\nimport TypingMessage from \"./TypingMessage\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Message from \"./Message\";\r\nimport \"../styles/_messages.scss\";\r\n\r\nconst socket = io(config.BOT_SERVER_ENDPOINT, {\r\n  transports: [\"websocket\", \"polling\", \"flashsocket\"],\r\n});\r\n\r\nconst ME = \"me\";\r\n\r\nfunction Messages() {\r\n  const [playSend] = useSound(config.SEND_AUDIO_URL);\r\n  const [playReceive] = useSound(config.RECEIVE_AUDIO_URL);\r\n  const { setLatestMessage } = useContext(LatestMessagesContext);\r\n\r\n  const [message, setMessage] = useState({\r\n    id: Date.now(),\r\n    user: ME,\r\n    message: \"\",\r\n  });\r\n\r\n  const [botTyping, setBotTyping] = useState(false);\r\n\r\n  const sendMessage = (data) => {\r\n    setLatestMessage(ME, data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      <Header />\r\n      <div className=\"messages__list\" id=\"message-list\"></div>\r\n      <Message message={message} />\r\n      <Footer\r\n        message={message}\r\n        sendMessage={() => sendMessage(message)}\r\n        onChangeMessage={(e) =>\r\n          setMessage({ ...message, message: e.target.value })\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n"]},"metadata":{},"sourceType":"module"}